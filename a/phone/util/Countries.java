package com.app.gpsphonelocator_new.phone.util;


import com.google.zxing.client.result.ExpandedProductParsedResult;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Countries {
    private static final int MAX_COUNTRIES = 207; // or the appropriate size
    private static Country[] COUNTRIES = new Country[MAX_COUNTRIES];

    static {
        Country[] countryArr = new Country[MAX_COUNTRIES];
        countryArr[0] = new Country("AF", "Afghanistan", "+93", "AFN");
        countryArr[1] = new Country("AX", "Aland Islands", "+358", "EUR");
        countryArr[2] = new Country("AL", "Albania", "+355", "ALL");
        countryArr[3] = new Country("DZ", "Algeria", "+213", "DZD");
        countryArr[4] = new Country("AD", "Andorra", "+376", "EUR");
        countryArr[5] = new Country("AO", "Angola", "+244", "AOA");
        countryArr[6] = new Country("AI", "Anguilla", "+1", "XCD");
        countryArr[7] = new Country("AG", "Antigua and Barbuda", "+1", "XCD");
        countryArr[8] = new Country("AR", "Argentina", "+54", "ARS");
        countryArr[9] = new Country("AM", "Armenia", "+374", "AMD");
        countryArr[10] = new Country("AW", "Aruba", "+297", "AWG");
        countryArr[11] = new Country("AU", "Australia", "+61", "AUD");
        countryArr[12] = new Country("AT", "Austria", "+43", "EUR");
        countryArr[13] = new Country("AZ", "Azerbaijan", "+994", "AZN");
        countryArr[14] = new Country("BS", "Bahamas", "+1", "BSD");
        countryArr[15] = new Country("BH", "Bahrain", "+973", "BHD");
        countryArr[16] = new Country("BD", "Bangladesh", "+880", "BDT");
        countryArr[17] = new Country("BB", "Barbados", "+1", "BBD");
        countryArr[18] = new Country("BY", "Belarus", "+375", "BYR");
        countryArr[19] = new Country("BE", "Belgium", "+32", "EUR");
        countryArr[20] = new Country("BZ", "Belize", "+501", "BZD");
        countryArr[21] = new Country("BJ", "Benin", "+229", "XOF");
        countryArr[22] = new Country("BM", "Bermuda", "+1", "BMD");
        countryArr[23] = new Country("BT", "Bhutan", "+975", "BTN");
        countryArr[24] = new Country("BO", "Bolivia, Plurinational State of", "+591", "BOB");
        countryArr[25] = new Country("BA", "Bosnia and Herzegovina", "+387", "BAM");
        countryArr[26] = new Country("BW", "Botswana", "+267", "BWP");
        countryArr[27] = new Country("BR", "Brazil", "+55", "BRL");
        countryArr[28] = new Country("BN", "Brunei Darussalam", "+673", "BND");
        countryArr[29] = new Country("BG", "Bulgaria", "+359", "BGN");
        countryArr[30] = new Country("BF", "Burkina Faso", "+226", "XOF");
        countryArr[31] = new Country("BI", "Burundi", "+257", "BIF");
        countryArr[32] = new Country("KH", "Cambodia", "+855", "KHR");
        countryArr[33] = new Country("CM", "Cameroon", "+237", "XAF");
        countryArr[34] = new Country("CA", "Canada", "+1", "CAD");
        countryArr[35] = new Country("CV", "Cape Verde", "+238", "CVE");
        countryArr[36] = new Country("KY", "Cayman Islands", "+345", "KYD");
        countryArr[37] = new Country("CF", "Central African Republic", "+236", "XAF");
        countryArr[38] = new Country("TD", "Chad", "+235", "XAF");
        countryArr[39] = new Country("CL", "Chile", "+56", "CLP");
        countryArr[40] = new Country("CN", "China", "+86", "CNY");
        countryArr[41] = new Country("CO", "Colombia", "+57", "COP");
        countryArr[42] = new Country("KM", "Comoros", "+269", "KMF");
        countryArr[43] = new Country("CD", "Congo, The Democratic Republic of the", "+243", "CDF");
        countryArr[44] = new Country("CG", "Congo", "+242", "XAF");
        countryArr[45] = new Country("CR", "Costa Rica", "+506", "CRC");
        countryArr[46] = new Country("HR", "Croatia", "+385", "HRK");
        countryArr[47] = new Country("CU", "Cuba", "+53", "CUP");
        countryArr[48] = new Country("CY", "Cyprus", "+357", "EUR");
        countryArr[49] = new Country("CZ", "Czech Republic", "+420", "CZK");
        countryArr[50] = new Country("DK", "Denmark", "+45", "DKK");
        countryArr[51] = new Country("DJ", "Djibouti", "+253", "DJF");
        countryArr[52] = new Country("DM", "Dominica", "+1", "XCD");
        countryArr[53] = new Country("DO", "Dominican Republic", "+1", "DOP");
        countryArr[54] = new Country("TL", "East Timor", "+670", "USD");
        countryArr[55] = new Country("EC", "Ecuador", "+593", "USD");
        countryArr[56] = new Country("EG", "Egypt", "+20", "EGP");
        countryArr[57] = new Country("SV", "El Salvador", "+503", "SVC");
        countryArr[58] = new Country("GQ", "Equatorial Guinea", "+240", "XAF");
        countryArr[59] = new Country("ER", "Eritrea", "+291", "ERN");
        countryArr[60] = new Country("EE", "Estonia", "+372", "EUR");
        countryArr[61] = new Country("ET", "Ethiopia", "+251", "ETB");
        countryArr[62] = new Country("FK", "Falkland Islands (Malvinas)", "+500", "FKP");
        countryArr[63] = new Country("FJ", "Fiji", "+679", "FJD");
        countryArr[64] = new Country("FI", "Finland", "+358", "EUR");
        countryArr[65] = new Country("FR", "France", "+33", "EUR");
        countryArr[66] = new Country("PF", "French Polynesia", "+689", "XPF");
        countryArr[67] = new Country("GA", "Gabon", "+241", "XAF");
        countryArr[68] = new Country("GM", "Gambia", "+220", "GMD");
        countryArr[69] = new Country("GE", "Georgia", "+995", "GEL");
        countryArr[70] = new Country("DE", "Germany", "+49", "EUR");
        countryArr[71] = new Country("GH", "Ghana", "+233", "GHS");
        countryArr[72] = new Country("GI", "Gibraltar", "+350", "GIP");
        countryArr[73] = new Country("GR", "Greece", "+30", "EUR");
        countryArr[74] = new Country("GD", "Grenada", "+1", "XCD");
        countryArr[75] = new Country("GT", "Guatemala", "+502", "GTQ");
        countryArr[76] = new Country("GG", "Guernsey", "+44", "GGP");
        countryArr[77] = new Country("GN", "Guinea", "+224", "GNF");
        countryArr[78] = new Country("GW", "Guinea-Bissau", "+245", "XOF");
        countryArr[79] = new Country("GY", "Guyana", "+595", "GYD");
        countryArr[80] = new Country("HT", "Haiti", "+509", "HTG");
        countryArr[81] = new Country("HN", "Honduras", "+504", "HNL");
        countryArr[82] = new Country("HK", "Hong Kong", "+852", "HKD");
        countryArr[83] = new Country("HU", "Hungary", "+36", "HUF");
        countryArr[84] = new Country("IS", "Iceland", "+354", "ISK");
        countryArr[85] = new Country("ID", "Indonesia", "+62", "IDR");
        countryArr[86] = new Country("IR", "Iran, Islamic Republic of", "+98", "IRR");
        countryArr[87] = new Country("IQ", "Iraq", "+964", "IQD");
        countryArr[88] = new Country("IE", "Ireland", "+353", "EUR");
        countryArr[89] = new Country("IM", "Isle of Man", "+44", "GBP");
        countryArr[90] = new Country("IL", "Israel", "+972", "ILS");
        countryArr[91] = new Country("IT", "Italy", "+39", "EUR");
        countryArr[92] = new Country("CI", "Ivory Coast", "+225", "XOF");
        countryArr[93] = new Country("JM", "Jamaica", "+1", "JMD");
        countryArr[94] = new Country("JP", "Japan", "+81", "JPY");
        countryArr[95] = new Country("JE", "Jersey", "+44", "JEP");
        countryArr[96] = new Country("JO", "Jordan", "+962", "JOD");
        countryArr[97] = new Country("KZ", "Kazakhstan", "+7", "KZT");
        countryArr[98] = new Country("KE", "Kenya", "+254", "KES");
        countryArr[99] = new Country("KW", "Kuwait", "+965", "KWD");
        countryArr[100] = new Country(ExpandedProductParsedResult.KILOGRAM, "Kyrgyzstan", "+996", "KGS");
        countryArr[101] = new Country("LA", "Lao People's Democratic Republic", "+856", "LAK");
        countryArr[102] = new Country("LV", "Latvia", "+371", "LVL");
        countryArr[103] = new Country(ExpandedProductParsedResult.POUND, "Lebanon", "+961", "LBP");
        countryArr[104] = new Country("LS", "Lesotho", "+266", "LSL");
        countryArr[105] = new Country("LR", "Liberia", "+231", "LRD");
        countryArr[106] = new Country("LY", "Libyan Arab Jamahiriya", "+218", "LYD");
        countryArr[107] = new Country("LI", "Liechtenstein", "+423", "CHF");
        countryArr[108] = new Country("LT", "Lithuania", "+370", "LTL");
        countryArr[109] = new Country("LU", "Luxembourg", "+352", "EUR");
        countryArr[110] = new Country("MO", "Macao", "+853", "MOP");
        countryArr[111] = new Country("MK", "Macedonia, The Former Yugoslav Republic of", "+389", "MKD");
        countryArr[112] = new Country("MG", "Madagascar", "+261", "MGA");
        countryArr[113] = new Country("MW", "Malawi", "+265", "MWK");
        countryArr[114] = new Country("MY", "Malaysia", "+60", "MYR");
        countryArr[115] = new Country("MV", "Maldives", "+960", "MVR");
        countryArr[116] = new Country("ML", "Mali", "+223", "XOF");
        countryArr[117] = new Country("MT", "Malta", "+356", "EUR");
        countryArr[118] = new Country("MR", "Mauritania", "+222", "MRO");
        countryArr[119] = new Country("MU", "Mauritius", "+230", "MUR");
        countryArr[120] = new Country("MX", "Mexico", "+52", "MXN");
        countryArr[121] = new Country("FM", "Micronesia, Federated States of", "+691", "USD");
        countryArr[122] = new Country("MD", "Moldova, Republic of", "+373", "MDL");
        countryArr[123] = new Country("MC", "Monaco", "+377", "EUR");
        countryArr[124] = new Country("MN", "Mongolia", "+976", "MNT");
        countryArr[125] = new Country("ME", "Montenegro", "+382", "EUR");
        countryArr[126] = new Country("MS", "Montserrat", "+1", "XCD");
        countryArr[128] = new Country("MZ", "Mozambique", "+258", "MZN");
        countryArr[129] = new Country("MM", "Myanmar", "+95", "MMK");
        countryArr[130] = new Country("NA", "Namibia", "+264", "NAD");
        countryArr[131] = new Country("NR", "Nauru", "+674", "AUD");
        countryArr[132] = new Country("NP", "Nepal", "+977", "NPR");
        countryArr[133] = new Country("NL", "Netherlands", "+31", "EUR");
        countryArr[134] = new Country("NZ", "New Zealand", "+64", "NZD");
        countryArr[135] = new Country("NI", "Nicaragua", "+505", "NIO");
        countryArr[136] = new Country("NE", "Niger", "+227", "XOF");
        countryArr[137] = new Country("NG", "Nigeria", "+234", "NGN");
        countryArr[138] = new Country("KP", "North Korea", "+850", "KPW");
        countryArr[139] = new Country("NO", "Norway", "+47", "NOK");
        countryArr[140] = new Country("OM", "Oman", "+968", "OMR");
        countryArr[141] = new Country("PK", "Pakistan", "+92", "PKR");
        countryArr[142] = new Country("PW", "Palau", "+680", "USD");
        countryArr[143] = new Country("PA", "Panama", "+507", "PAB");
        countryArr[145] = new Country("PY", "Paraguay", "+595", "PYG");
        countryArr[146] = new Country("PE", "Peru", "+51", "PEN");
        countryArr[147] = new Country("PH", "Philippines", "+63", "PHP");
        countryArr[148] = new Country("PL", "Poland", "+48", "PLN");
        countryArr[149] = new Country("PT", "Portugal", "+351", "EUR");
        countryArr[150] = new Country("PR", "Puerto Rico", "+1", "USD");
        countryArr[151] = new Country("QA", "Qatar", "+974", "QAR");
        countryArr[152] = new Country("RO", "Romania", "+40", "RON");
        countryArr[153] = new Country("RU", "Russia", "+7", "RUB");
        countryArr[154] = new Country("RW", "Rwanda", "+250", "RWF");
        countryArr[155] = new Country("SH", "Saint Helena, Ascension and Tristan Da Cunha", "+290", "SHP");
        countryArr[156] = new Country("KN", "Saint Kitts and Nevis", "+1", "XCD");
        countryArr[157] = new Country("LC", "Saint Lucia", "+1", "XCD");
        countryArr[158] = new Country("VC", "Saint Vincent and the Grenadines", "+1", "XCD");
        countryArr[159] = new Country("WS", "Samoa", "+685", "WST");
        countryArr[160] = new Country("SM", "San Marino", "+378", "EUR");
        countryArr[161] = new Country("ST", "Sao Tome and Principe", "+239", "STD");
        countryArr[162] = new Country("SA", "Saudi Arabia", "+966", "SAR");
        countryArr[163] = new Country("SN", "Senegal", "+221", "XOF");
        countryArr[164] = new Country("RS", "Serbia", "+381", "RSD");
        countryArr[165] = new Country("SC", "Seychelles", "+248", "SCR");
        countryArr[166] = new Country("SL", "Sierra Leone", "+232", "SLL");
        countryArr[167] = new Country("SG", "Singapore", "+65", "SGD");
        countryArr[168] = new Country("SK", "Slovakia", "+421", "EUR");
        countryArr[169] = new Country("SI", "Slovenia", "+386", "EUR");
        countryArr[170] = new Country("SB", "Solomon Islands", "+677", "SBD");
        countryArr[171] = new Country("SO", "Somalia", "+252", "SOS");
        countryArr[172] = new Country("ZA", "South Africa", "+27", "ZAR");
        countryArr[173] = new Country("KR", "South Korea", "+82", "KRW");
        countryArr[174] = new Country("ES", "Spain", "+34", "EUR");
        countryArr[175] = new Country("LK", "Sri Lanka", "+94", "LKR");
        countryArr[176] = new Country("SD", "Sudan", "+249", "SDG");
        countryArr[177] = new Country("SR", "Suriname", "+597", "SRD");
        countryArr[178] = new Country("SZ", "Swaziland", "+268", "SZL");
        countryArr[179] = new Country("SE", "Sweden", "+46", "SEK");
        countryArr[180] = new Country("CH", "Switzerland", "+41", "CHF");
        countryArr[181] = new Country("SY", "Syrian Arab Republic", "+963", "SYP");
        countryArr[182] = new Country("TW", "Taiwan", "+886", "TWD");
        countryArr[183] = new Country("TJ", "Tajikistan", "+992", "TJS");
        countryArr[184] = new Country("TZ", "Tanzania, United Republic of", "+255", "TZS");
        countryArr[185] = new Country("TH", "Thailand", "+66", "THB");
        countryArr[186] = new Country("TG", "Togo", "+228", "XOF");
        countryArr[187] = new Country("TO", "Tonga", "+676", "TOP");
        countryArr[188] = new Country("TT", "Trinidad and Tobago", "+1", "TTD");
        countryArr[189] = new Country("TN", "Tunisia", "+216", "TND");
        countryArr[190] = new Country("TR", "Turkey", "+90", "TRY");
        countryArr[191] = new Country("TM", "Turkmenistan", "+993", "TMT");
        countryArr[192] = new Country("TC", "Turks and Caicos Islands", "+1", "USD");
        countryArr[193] = new Country("UG", "Uganda", "+256", "UGX");
        countryArr[194] = new Country("UA", "Ukraine", "+380", "UAH");
        countryArr[195] = new Country("AE", "United Arab Emirates", "+971", "AED");
        countryArr[196] = new Country("GB", "United Kingdom", "+44", "GBP");
        countryArr[197] = new Country("US", "United States", "+1", "USD");
        countryArr[198] = new Country("UY", "Uruguay", "+598", "UYU");
        countryArr[199] = new Country("UZ", "Uzbekistan", "+998", "UZS");
        countryArr[200] = new Country("VU", "Vanuatu", "+678", "VUV");
        countryArr[201] = new Country("VE", "Venezuela, Bolivarian Republic of", "+58", "VEF");
        countryArr[202] = new Country("VN", "Vietnam", "+84", "VND");
        countryArr[203] = new Country("VG", "Virgin Islands, British", "+1", "USD");
        countryArr[204] = new Country("YE", "Yemen", "+967", "YER");
        countryArr[205] = new Country("ZM", "Zambia", "+260", "ZMW");
        countryArr[206] = new Country("ZW", "Zimbabwe", "+263", "USD");
        COUNTRIES = countryArr;
    }

    public static List<Country> getCountries() {
        return new ArrayList(Arrays.asList(COUNTRIES));
    }
}
